int main (int $_main_argc, char **$_main_argv) {
    /* DECL: 2 */ struct archive *$_process_command_line_a1 = $ABSTRACT_0;
    /* DECL: 7 */ int $_process_command_line_option_index_1;
    /* STM: 0 */ $_process_command_line_option_index_1 = 1;
    /* STM: 1 */ $_process_command_line_a1->append_files_count = 1;
    /* STM: 5 */ $_process_command_line_a1->file_name = $_process_command_line_archiveFileName_1;
    goto LABEL_process_command_line1;
LABEL_process_command_line1 : if (0) {
    }
    /* DECL: 9 */ struct archive *$_open_archive_file_archive1 = $ABSTRACT_3;
    /* DECL: 10 */ int $ABSTRETVAL_ret_open_archive_file1;
    /* STM: 7 */ $_open_archive_file_archive1->fd = open ($_open_archive_file_archive1->file_name, $_open_archive_file_archive1->fmode, S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP);
    /* STM: 8 */ $ABSTRETVAL_ret_open_archive_file1 = $_open_archive_file_archive1->fd;
    goto LABEL_open_archive_file1;
LABEL_open_archive_file1 : if (0) {
    }
    /* DECL: 12 */ struct archive *$_read_archive_header_archive1 = $ABSTRACT_4;
    /* DECL: 14 */ size_t $_read_archive_header_descriptors_size_1;
    /* STM: 10 */ $_read_archive_header_descriptors_size_1 = sizeof (struct descr) * $_read_archive_header_archive1->append_files_count;
    /* DECL: 15 */ int $_read_archive_header_result_1;
        /* STM: 12 */ $_read_archive_header_result_1 = read ($_read_archive_header_archive1->fd, &$_read_archive_header_archive1->files_count, sizeof ($_read_archive_header_archive1->files_count));
        /* STM: 13 */ $_read_archive_header_archive1->headers_offset = sizeof (struct descr) * $_read_archive_header_archive1->files_count;
    /* STM: 16 */ $_read_archive_header_archive1->file_descriptors = malloc ($_read_archive_header_descriptors_size_1);
    goto LABEL_read_archive_header1;
LABEL_read_archive_header1 : if (0) {
    }
    /* RETURN_MARKER */ write_archive ($_main_in_file, & archive);
}

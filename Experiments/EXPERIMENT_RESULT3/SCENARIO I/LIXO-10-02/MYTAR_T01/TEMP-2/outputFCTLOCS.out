main
int main (int $_main_argc, char **$_main_argv) {
    /*@DECL*/ int $_main_argc;
    /*@DECL*/ char **$_main_argv;
    /*@DECL*/ struct archive *$_process_command_line_a1 = process_command_line1_$ABSTRACT_ID_1 ;
    /*@DECL*/ int $_process_command_line_argc1 = process_command_line1_$ABSTRACT_ID_2 ;
    /*@DECL*/ char **$_process_command_line_argv1 = process_command_line1_$ABSTRACT_ID_3 ;
    /*@DECL*/ int $ABSTRETVAL_ret_process_command_line1;
    //Mappings for function: process_command_line (& archive, $_main_argc, $_main_argv);
    //call_the_function: process_command_line process_command_line1 ()
    LABEL_process_command_line1 :
    if(0){}
    //REMOVE_THIS ();
    /*@DECL*/ struct archive *$_open_archive_file_archive1 = open_archive_file1_$ABSTRACT_ID_1 ;
    /*@DECL*/ int $ABSTRETVAL_ret_open_archive_file1;
    //Mappings for function: open_archive_file (& archive);
    //call_the_function: open_archive_file open_archive_file1 ()
    LABEL_open_archive_file1 :
    if(0){}
    //REMOVE_THIS ();
            /*@DECL*/ char *$_main_in_file;
            /*@STM*/ $_main_in_file = $_main_argv[$_main_argc - 1];
            /*@DECL*/ struct archive *$_read_archive_header_archive1 = read_archive_header1_$ABSTRACT_ID_1 ;
            /*@DECL*/ int $ABSTRETVAL_ret_read_archive_header1;
            //Mappings for function: read_archive_header (& archive);
            //call_the_function: read_archive_header read_archive_header1 ()
            LABEL_read_archive_header1 :
            if(0){}
            //REMOVE_THIS ();
            /* RETURN_MARKER */ write_archive ($_main_in_file, & archive);
    /*@STM*/ $ABSTRETVAL_ret_main = 0;
    goto LABEL_main;
}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
process_command_line
int process_command_line (struct archive *$_process_command_line_a, int $_process_command_line_argc, char **$_process_command_line_argv) {
    /*@DECL*/ int $_process_command_line_c;
    /*@DECL*/ int $_process_command_line_option_index;
    /*@STM*/ $_process_command_line_option_index = 1;
    /*@STM*/ $_process_command_line_a->append_files_count = 1;
    /*@STM*/ $_process_command_line_a->command = COM_CREATE;
    /*@STM*/ $_process_command_line_a->fmode = O_RDWR | O_CREAT | O_EXCL;
    /*@DECL*/ char *$_process_command_line_archiveFileName;
    /*@STM*/ $_process_command_line_archiveFileName = optarg;
    /*@STM*/ $_process_command_line_a->file_name = $_process_command_line_archiveFileName;
    /*@STM*/ $ABSTRETVAL_ret_process_command_line = 1;
    goto LABEL_process_command_line;
}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
open_archive_file
int open_archive_file (struct archive *$_open_archive_file_archive) {
    /*@STM*/ $_open_archive_file_archive->fd = open ($_open_archive_file_archive->file_name, $_open_archive_file_archive->fmode, S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP);
    /*@STM*/ $ABSTRETVAL_ret_open_archive_file = $_open_archive_file_archive->fd;
    goto LABEL_open_archive_file;
}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
read_archive_header
int read_archive_header (struct archive *$_read_archive_header_archive) {
    /*@DECL*/ size_t $_read_archive_header_descriptors_size;
    /*@STM*/ $_read_archive_header_descriptors_size = sizeof (struct descr) * $_read_archive_header_archive->append_files_count;
    /*@DECL*/ int $_read_archive_header_result;
    //COMPOUND START: COMP_MARK7if (COM_APPEND == $_read_archive_header_archive->command || COM_LIST == $_read_archive_header_archive->command) {}
    if (COM_APPEND == $_read_archive_header_archive->command || COM_LIST == $_read_archive_header_archive->command) {
        /*@STM*/ $_read_archive_header_result = lseek ($_read_archive_header_archive->fd, - sizeof ($_read_archive_header_archive->files_count), SEEK_END);
        /*@STM*/ $_read_archive_header_result = read ($_read_archive_header_archive->fd, &$_read_archive_header_archive->files_count, sizeof ($_read_archive_header_archive->files_count));
        /*@STM*/ $_read_archive_header_archive->headers_offset = sizeof (struct descr) * $_read_archive_header_archive->files_count;
        /*@STM*/ $_read_archive_header_archive->headers_offset += sizeof ($_read_archive_header_archive->files_count);
        /*@STM*/ $_read_archive_header_descriptors_size += sizeof (struct descr) * $_read_archive_header_archive->files_count;
    }
    //COMPOUND END: COMP_MARK7if (COM_APPEND == $_read_archive_header_archive->command || COM_LIST == $_read_archive_header_archive->command) {}
    /*@STM*/ $_read_archive_header_archive->file_descriptors = malloc ($_read_archive_header_descriptors_size);
    //COMPOUND START: COMP_MARK8if (COM_APPEND == $_read_archive_header_archive->command || COM_LIST == $_read_archive_header_archive->command) {}
    if (COM_APPEND == $_read_archive_header_archive->command || COM_LIST == $_read_archive_header_archive->command) {
        /*@STM*/ $_read_archive_header_result = lseek ($_read_archive_header_archive->fd, -$_read_archive_header_archive->headers_offset, SEEK_END);
        /*@STM*/ $_read_archive_header_result = read ($_read_archive_header_archive->fd, $_read_archive_header_archive->file_descriptors, $_read_archive_header_archive->headers_offset - sizeof ($_read_archive_header_archive->files_count));
    }
    //COMPOUND END: COMP_MARK8if (COM_APPEND == $_read_archive_header_archive->command || COM_LIST == $_read_archive_header_archive->command) {}
    /*@STM*/ $ABSTRETVAL_ret_read_archive_header = $_read_archive_header_result;
    goto LABEL_read_archive_header;
}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
